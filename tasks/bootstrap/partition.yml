---
#  TODO: make another play to clean disk 
#- name: Read device information (always use unit when probing)
#  community.general.parted: device="{{ disk }}" unit=MiB
#  register: sda_info
#
#
#- name: Unmount partitions
#  ansible.posix.mount:
#    path: "{{ disk }}{{ item.num }}"
#    state: unmounted
#  loop: '{{ sda_info.partitions }}'
#
#- name: delete partitions
#  community.general.parted:
#    device: "{{ disk }}"
#    number: '{{ item.num }}'
#    state: absent
#  loop: '{{ sda_info.partitions }}'

#- name: Clean disk
#  shell: dd if=/dev/zero of={{ disk }} bs=1M
#  ignore_errors: yes

- name: Create Boot partition
  community.general.parted:
    unit: "MiB" # only for display, not for part_start/part_end
    device: "{{ disk }}"
    number: 1
    state: present
    flags: [esp]
    label: gpt
    part_type: primary
    part_start: 1MiB
    part_end: "{{ 1 + partition_size['boot'] }}MiB"
    fs_type: fat32
  register: parition_created

- name: Create Swap partition
  community.general.parted:
    unit: "MiB"
    device: "{{ disk }}"
    number: 2
    state: present
    label: gpt
    part_type: primary
    part_start: "{{ parition_created | community.general.json_query('partitions[-1].end') }}MiB"
    part_end: "{{ parition_created | community.general.json_query('partitions[-1].end') + partition_size['swap'] * 1024 }}MiB"
    fs_type: linux-swap
  register: parition_created

- name: Create Root partition
  community.general.parted:
    unit: "MiB"
    device: "{{ disk }}"
    number: 3
    state: present
    label: gpt
    part_type: primary
    part_start: "{{ parition_created | community.general.json_query('partitions[-1].end') }}MiB"
    part_end: "{{ parition_created | community.general.json_query('partitions[-1].end') + partition_size['root'] * 1024 }}MiB"
    fs_type: ext4
  register: parition_created

- name: Create Home partition
  community.general.parted:
    unit: "MiB"
    device: "{{ disk }}"
    number: 4
    state: present
    label: gpt
    part_type: primary
    part_start: "{{ parition_created | community.general.json_query('partitions[-1].end') }}MiB"
    part_end: "{{ parition_created | community.general.json_query('partitions[-1].end') + partition_size['home'] * 1024 }}MiB"
    fs_type: ext4
  register: parition_created

